{"ast":null,"code":"import { inject } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { firstValueFrom } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class UsersService {\n  constructor() {\n    this.httpClient = inject(HttpClient);\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': 'token' // Agrega el token en la cabecera como 'Bearer <tu_token>'\n      })\n    };\n\n    this.baseUrls = 'http://localhost:3001/api';\n  }\n  register(formValue) {\n    return firstValueFrom(this.httpClient.post(`${this.baseUrls}/users/registro`, formValue));\n  }\n  login(formValue) {\n    return firstValueFrom(this.httpClient.post(`${this.baseUrls}/users/login`, formValue));\n  }\n  validateToken() {\n    //this.token_validacion = localStorage.getItem('token');\n    return firstValueFrom(this.httpClient.post(`${this.baseUrls}/users/validate`, this.httpOptions));\n  }\n  getUserData() {}\n}\nUsersService.ɵfac = function UsersService_Factory(t) {\n  return new (t || UsersService)();\n};\nUsersService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UsersService,\n  factory: UsersService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAAA,SAAqBA,MAAM,QAAQ,eAAe;AAClD,SAASC,UAAU,EAAEC,WAAW,QAAQ,sBAAsB;AAC9D,SAASC,cAAc,QAAQ,MAAM;;AAKrC,OAAM,MAAOC,YAAY;EAKvBC;IAHQ,eAAU,GAAGL,MAAM,CAACC,UAAU,CAAC;IAU/B,gBAAW,GAAG;MAEpBK,OAAO,EAAE,IAAIJ,WAAW,CAAC;QACvB,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAE,OAAO,CAAC;OAC1B;KACF;;IAZC,IAAI,CAACK,QAAQ,GAAG,2BAA2B;EAC7C;EAaAC,QAAQ,CAACC,SAAc;IACrB,OAAON,cAAc,CACnB,IAAI,CAACO,UAAU,CAACC,IAAI,CAAM,GAAG,IAAI,CAACJ,QAAQ,iBAAiB,EAAEE,SAAS,CAAC,CACxE;EACH;EAEAG,KAAK,CAACH,SAAc;IAClB,OAAON,cAAc,CACnB,IAAI,CAACO,UAAU,CAACC,IAAI,CAAM,GAAG,IAAI,CAACJ,QAAQ,cAAc,EAAEE,SAAS,CAAC,CACrE;EACH;EAEAI,aAAa;IAEV;IAED,OAAOV,cAAc,CACnB,IAAI,CAACO,UAAU,CAACC,IAAI,CAAM,GAAG,IAAI,CAACJ,QAAQ,iBAAiB,EAAC,IAAI,CAACO,WAAW,CAAC,CAC9E;EACH;EAEAC,WAAW,IAGX;;AA5CWX,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAAY,SAAZZ,YAAY;EAAAa,YAFX;AAAM","names":["inject","HttpClient","HttpHeaders","firstValueFrom","UsersService","constructor","headers","baseUrls","register","formValue","httpClient","post","login","validateToken","httpOptions","getUserData","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\benja\\Documents\\Proyecto\\Front\\ProyectoFront\\src\\app\\services\\users.service.ts"],"sourcesContent":["import { Injectable, inject } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { firstValueFrom } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsersService {\n\n  private httpClient = inject(HttpClient);\n  private baseUrls: string;\n\n  constructor() { \n    this.baseUrls = 'http://localhost:3001/api';\n  }\n\n  private token_validacion?: string;\n  \n  \n  private httpOptions = {\n    \n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': 'token' // Agrega el token en la cabecera como 'Bearer <tu_token>'\n    })\n  };\n\n  register(formValue: any){\n    return firstValueFrom(\n      this.httpClient.post<any>(`${this.baseUrls}/users/registro`, formValue)\n    )\n  }\n\n  login(formValue: any){\n    return firstValueFrom(\n      this.httpClient.post<any>(`${this.baseUrls}/users/login`, formValue)\n    )\n  }\n\n  validateToken(){\n\n     //this.token_validacion = localStorage.getItem('token');\n    \n    return firstValueFrom(      \n      this.httpClient.post<any>(`${this.baseUrls}/users/validate`,this.httpOptions)\n    )\n  }\n\n  getUserData(){\n\n\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}